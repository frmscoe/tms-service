# SPDX-License-Identifier: Apache-2.0

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
env:
  NODE_ENV: 'dev'
  STARTUP_TYPE: 'nats'
  SERVER_URL: 'nats://localhost:4222'
  PRODUCER_STREAM: event-director
  CONSUMER_STREAM: TMS
  ACK_POLICY: 'None'
  STREAM_SUBJECT:
  APM_ACTIVE: false
  APM_LOGGING: false
  FUNCTION_NAME: '${{ github.event.repository.name }}'
  REDIS_DB: 0
  REDIS_AUTH:
  REDIS_SERVERS: '[{"host":"127.0.0.1", "port":6379}]'
  REDIS_IS_CLUSTER: false
  DATABASE_NAME: Configuration
  TRANSACTION_HISTORY_DATABASE_URL: 'http://localhost:8529/'
  PSEUDONYMS_DATABASE_URL: 'http://localhost:8529/'
  TRANSACTION_HISTORY_DATABASE_USER: root
  PSEUDONYMS_DATABASE_USER: root
  TRANSACTION_HISTORY_DATABASE_PASSWORD:
  PSEUDONYMS_DATABASE_PASSWORD:
  PSEUDONYMS_DATABASE: pseudonyms
  TRANSACTION_HISTORY_DATABASE: transactionHistory
  TRANSACTION_HISTORY_DATABASE_CERT_PATH: ''
  PSEUDONYMS_DATABASE_CERT_PATH: ''
  NODE_TLS_REJECT_UNAUTHORIZED: '0'
  TRANSACTION_HISTORY_PAIN001_COLLECTION: transactionHistoryPain001
  TRANSACTION_HISTORY_PAIN013_COLLECTION: transactionHistoryPain013
  TRANSACTION_HISTORY_PACS008_COLLECTION: transactionHistoryPacs008
  TRANSACTION_HISTORY_PACS002_COLLECTION: transactionHistoryPacs002
  QUOTING: true
  PORT: 3000
  GH_RW_TOKEN: '${{ secrets.GH_WRITE_TOKEN }}'
  GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  NPM_SCOPE: "@frmscoe"
  NPM_REGISTRY: "https://npm.pkg.github.com/"
  ENV_NEWMAN: https://raw.githubusercontent.com/frmscoe/postman/indexes/environments/Ekuta-LOCAL.postman_environment.json
  THRESHOLD: 5
  REPO_NAME: 'performance-benchmark'
  ITERATION_COUNT: 500

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    name: run build
    strategy:
      matrix:
        node-version: [16, 20]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}
          scope: ${{ env.NPM_SCOPE }}
      - name: Install dependencies 
        run: npm ci
      - name: Run build
        run: npm run build

  lint:
    runs-on: ubuntu-latest
    name: check style
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}
          scope: ${{ env.NPM_SCOPE }}
      - name: Install dependencies
        run: npm ci
      - name: Check linting
        run: npm run lint
      - name: Check formatting
        run: npm run lint:prettier

  test:
    runs-on: ubuntu-latest
    name: check tests
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}
          scope: ${{ env.NPM_SCOPE }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test